
var app = require('../app');
var debug = require('debug')('caninecare:server');
var http = require('http');
var port = process.env.PORT || '8088'
app.set('port', port);
const mongoose = require('mongoose'); 
const mongo_uri = process.env.MONGODB_URI || 'mongodb+srv://rockey:mongo@cluster0.varna.mongodb.net/jasmine?retryWrites=true&w=majority';const mongo_options = {
  useNewUrlParser: true,
  useCreateIndex: true,
  useFindAndModify: false,
  useUnifiedTopology: true,
  autoIndex: false, // Don't build indexes
};


mongoose.connect(mongo_uri, mongo_options).then(conn => {
  httpServer.listen(port);
  httpServer.on('error', onError);
  httpServer.on('listening', onListening);
}).catch(onError)

var httpServer = http.createServer(app);


function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }
  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = httpServer.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
